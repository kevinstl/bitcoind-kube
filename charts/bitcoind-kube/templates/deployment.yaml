apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "bitcoind.fullname" . }}
  labels:
    app: {{ template "bitcoind.name" . }}
    chart: {{ template "bitcoind.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: {{ template "bitcoind.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "bitcoind.name" . }}
        release: {{ .Release.Name }}
    spec:

      nodeSelector:
        pool: cryptocurrency-services-pool-1
      tolerations:
        - key: cryptocurrency-services-pool-1
          operator: Equal
          value: "true"
          effect: NoSchedule

      {{- if .Values.configurationFile }}
      initContainers:
        - name: copy-bitcoind-config
          image: busybox
          volumeMounts:
            - name: configmap
              mountPath: /configmap
            - name: config
              mountPath: /bitcoin/.bitcoin/
          command: ['sh', '-c', 'cp /configmap/bitcoin.conf /bitcoin/.bitcoin/bitcoin.conf']
#        - name: setup-rpc
#          image: busybox
#          command: ['sh', '-c', '/tmp/setup-rpc.sh']
      {{- end }}
      containers:
        - name: {{ template "bitcoind.fullname" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}

          env:
            - name: RPCUSER
              valueFrom:
                secretKeyRef:
                  name: lightning-kube-secrets
                  key: rpcuser
            - name: RPCPASSWORD
              valueFrom:
                secretKeyRef:
                  name: lightning-kube-secrets
                  key: rpcpass

          lifecycle:
            preStop:
              exec:
                command: ["/usr/bin/bitcoin-cli","--conf=/bitcoin/.bitcoin/bitcoin.conf","stop"]

          resources:
{{ toYaml .Values.resources | indent 12 }}
          ports:
            - name: rpc
              containerPort: {{ .Values.service.rpcPort }}
            - name: p2p
              containerPort: {{ .Values.service.p2pPort }}
            - name: testnet
              containerPort: {{ .Values.service.testnetPort }}
            - name: testnetp2pport
              containerPort: {{ .Values.service.testnetP2pPort }}
            - name: regtest
              containerPort: {{ .Values.service.regtestPort }}
            - name: regtestp2pport
              containerPort: {{ .Values.service.regtestP2pPort }}
            - name: zmqpubrawblock
              containerPort: {{ .Values.service.zmqpubrawblockPort }}
            - name: zmqpubrawtx
              containerPort: {{ .Values.service.zmqpubrawtxPort }}
          volumeMounts:
            - name: data
              mountPath: /bitcoin
#              mountPath: /mnt/lk/{{ .Values.project.network }}/bitcoind/data
#              subPath: lk/{{ .Values.project.network }}/bitcoind/data
            {{- if .Values.configurationFile }}
            - name: config
              mountPath: /bitcoin/.bitcoin/bitcoin.conf
              subPath: bitcoin.conf
            {{- end }}

      volumes:
        {{- if .Values.configurationFile }}
        - name: config
          emptyDir: {}
        - name: configmap
          configMap:
            name: {{ template "bitcoind.fullname" . }}
        {{- end }}
        - name: data
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
#            claimName: {{ .Values.persistence.existingClaim | default (include "bitcoind.fullname" .) }}
            claimName: bitcoind-kube-pvc{{ .Values.project.networkSuffix }}
        {{- else }}
          emptyDir: {}
        {{- end -}}
